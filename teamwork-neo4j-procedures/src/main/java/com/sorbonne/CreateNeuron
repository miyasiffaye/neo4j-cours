package com.sorbonne;

import org.neo4j.graphdb.*;
import org.neo4j.logging.Log;
import org.neo4j.procedure.*;

import java.util.stream.Stream;

public class CreateNeuron {

    // This gives us a log instance that outputs messages to the
    // standard log, normally found under `data/log/console.log`
    @Context
    public Log log;

    @Context
    public GraphDatabaseService db;

    // Exemple de base à lire compléter corriger
    // Pour utiliser call nn.createNeuron("123","0","input","softmax")
    @Procedure(name = "nn.createNeuron", mode = Mode.WRITE)
    @Description("Creates a new Neuron node with the specified properties: id, layer, type, and activation function.")
    public Stream<CreateResult> createNeuron(@Name("id") String id,
                                             @Name("layer") String layer,
                                             @Name("type") String type,
                                             @Name("activation_function") String activation_function) {
        try (Transaction tx = db.beginTx()) {
            // Corrected Cypher query with proper string handling
            String query = String.format(
                    "CREATE (n:Neuron { " +
                            "id: '%s', " +
                            "layer: '%s', " +
                            "type: '%s', " +
                            "bias: 0.0, " +
                            "output: null, " +
                            "m_bias: 0.0, " +
                            "v_bias: 0.0, " +
                            "activation_function: '%s' " +
                            "})",
                    id, layer, type, activation_function
            );

            tx.execute(query);
            tx.commit(); // Commit the transaction to save changes with the node
            return Stream.of(new CreateResult("ok"));

        } catch (Exception e) {
            log.error("Failed to create neuron: " + e.getMessage(), e);
            return Stream.of(new CreateResult("ko"));
        }
    }

    public static class CreateResult {
        public final String result;

        public CreateResult(String result) {
            this.result = result;
        }
    }
}
