package com.sorbonne;

import org.junit.jupiter.api.*;
import org.neo4j.driver.*;
import org.neo4j.harness.Neo4j;
import org.neo4j.harness.Neo4jBuilders;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class ConnectInputsRowToNeuronTest {

    private Neo4j embeddedDatabaseServer;
    private Driver driver;

    @BeforeAll
    void setup() {
        embeddedDatabaseServer = Neo4jBuilders.newInProcessBuilder()
                .withProcedure(ConnectInputsRowToNeuron.class)
                .build();
        driver = GraphDatabase.driver(embeddedDatabaseServer.boltURI());
    }

    @AfterAll
    void tearDown() {
        driver.close();
        embeddedDatabaseServer.close();
    }

    @BeforeEach
    void clearDatabase() {
        try (Session session = driver.session()) {
            session.run("MATCH (n) DETACH DELETE n");
        }
    }

    @Test
    void testConnectInputsRowToNeuron() {
        try (Session session = driver.session()) {
            session.run("""
                UNWIND range(0, 2) AS neuronIndex
                CREATE (:Neuron {id: '0-' + toString(neuronIndex), type: 'input'})
            """);

            session.run("""
                CALL connectInputsRowToNeuron([3, 5, 7], 2)
            """);
        }
    }
}
